{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\react\\\\DIY_react\\\\src\\\\welcomepage.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport './welcomepage.css';\nimport Mylogin from \"./mylogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Welcomepage extends Component {\n  constructor() {\n    super();\n    this.handleStartButtonClick = () => {\n      this.setState({\n        showLogin: true\n      });\n    };\n    this.state = {\n      text: \"\",\n      showLogin: false\n    };\n  }\n  componentDidMount() {\n    const welcomeText = \"this is welcome page.\";\n    let index = 0;\n\n    //첫글자 t 스킵돼서 setState로 t로 값 갱신함\n    this.setState({\n      text: welcomeText[index]\n    });\n    this.intervalId = setInterval(() => {\n      if (index < welcomeText.length - 1) {\n        this.setState(prevState => ({\n          text: prevState.text + welcomeText[index]\n        }));\n        index++;\n      } else {\n        clearInterval(this.intervalId);\n      }\n    }, 300);\n  }\n  //         //현재 문자값이 빈칸이면 interval 더 빠르게 \n  //         const blankDuration = welcomeText[index] === ' ' ? 10 : 900;\n\n  //         this.setState((prevState) => ({\n  //           text: prevState.text + welcomeText[index],\n  //         }));\n\n  //         clearInterval(this.intervalId);\n\n  //         this.intervalId = setInterval(() => {\n  //             this.setState((prevState) => ({\n  //                 text: prevState.text + welcomeText[index],\n  //             }));\n  //         }, blankDuration);\n  //     }else{\n  //         clearInterval(this.intervalId);\n  //     }\n\n  //     },900);\n  //   }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-container\",\n      children: !this.state.showLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-animation\",\n          children: this.state.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"startbtn\",\n            value: \"start\",\n            onClick: this.handleStartButtonClick,\n            type: \"button\",\n            children: \"click to start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Mylogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n    // {this.state.showLogin && <Mylogin />}\n  }\n}\n\n//export 대문자로 안하면 인식안함\nexport default Welcomepage;","map":{"version":3,"names":["React","Component","Mylogin","jsxDEV","_jsxDEV","Fragment","_Fragment","Welcomepage","constructor","handleStartButtonClick","setState","showLogin","state","text","componentDidMount","welcomeText","index","intervalId","setInterval","length","prevState","clearInterval","componentWillUnmount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onClick","type"],"sources":["C:/projects/react/DIY_react/src/welcomepage.js"],"sourcesContent":["import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport './welcomepage.css';\r\nimport Mylogin from \"./mylogin\";\r\n\r\nclass Welcomepage extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            text: \"\",\r\n            showLogin: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const welcomeText = \"this is welcome page.\";\r\n        let index = 0;\r\n\r\n        //첫글자 t 스킵돼서 setState로 t로 값 갱신함\r\n        this.setState({ text: welcomeText[index] });\r\n    \r\n        this.intervalId = setInterval(() => {\r\n            if (index < welcomeText.length - 1) {\r\n                this.setState((prevState) => ({\r\n                    text: prevState.text + welcomeText[index],\r\n                }));\r\n                index++;\r\n            }else{\r\n                clearInterval(this.intervalId);\r\n            }\r\n        }, 300);\r\n    }\r\n    //         //현재 문자값이 빈칸이면 interval 더 빠르게 \r\n    //         const blankDuration = welcomeText[index] === ' ' ? 10 : 900;\r\n\r\n    //         this.setState((prevState) => ({\r\n    //           text: prevState.text + welcomeText[index],\r\n    //         }));\r\n          \r\n    //         clearInterval(this.intervalId);\r\n\r\n    //         this.intervalId = setInterval(() => {\r\n    //             this.setState((prevState) => ({\r\n    //                 text: prevState.text + welcomeText[index],\r\n    //             }));\r\n    //         }, blankDuration);\r\n    //     }else{\r\n    //         clearInterval(this.intervalId);\r\n    //     }\r\n          \r\n    //     },900);\r\n    //   }\r\n\r\n      componentWillUnmount() {\r\n        clearInterval(this.intervalId);\r\n      }\r\n\r\n      handleStartButtonClick = () => {\r\n        this.setState({ showLogin: true });\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"welcome-container\">\r\n                {!this.state.showLogin ? (\r\n                    <>\r\n                <div className=\"welcome-animation\">\r\n                    {this.state.text}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    {/* //로그인창으로 가는 버튼 */}\r\n                    <button id=\"startbtn\" value=\"start\" onClick={this.handleStartButtonClick}\r\n                    type=\"button\">\r\n                        click to start\r\n                    </button>\r\n                </div>\r\n                </>\r\n                ) : (\r\n                    <Mylogin />\r\n                )}\r\n            </div>\r\n        );\r\n                // {this.state.showLogin && <Mylogin />}\r\n    }\r\n}\r\n\r\n//export 대문자로 안하면 인식안함\r\nexport default Welcomepage;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,mBAAmB;AAC1B,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,WAAW,SAASN,SAAS;EAE/BO,WAAWA,CAAA,EAAE;IACT,KAAK,CAAC,CAAC;IAAC,KAmDVC,sBAAsB,GAAG,MAAM;MAC7B,IAAI,CAACC,QAAQ,CAAC;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC;IACpC,CAAC;IAnDC,IAAI,CAACC,KAAK,GAAG;MACTC,IAAI,EAAE,EAAE;MACRF,SAAS,EAAE;IACf,CAAC;EACL;EAEAG,iBAAiBA,CAAA,EAAG;IAChB,MAAMC,WAAW,GAAG,uBAAuB;IAC3C,IAAIC,KAAK,GAAG,CAAC;;IAEb;IACA,IAAI,CAACN,QAAQ,CAAC;MAAEG,IAAI,EAAEE,WAAW,CAACC,KAAK;IAAE,CAAC,CAAC;IAE3C,IAAI,CAACC,UAAU,GAAGC,WAAW,CAAC,MAAM;MAChC,IAAIF,KAAK,GAAGD,WAAW,CAACI,MAAM,GAAG,CAAC,EAAE;QAChC,IAAI,CAACT,QAAQ,CAAEU,SAAS,KAAM;UAC1BP,IAAI,EAAEO,SAAS,CAACP,IAAI,GAAGE,WAAW,CAACC,KAAK;QAC5C,CAAC,CAAC,CAAC;QACHA,KAAK,EAAE;MACX,CAAC,MAAI;QACDK,aAAa,CAAC,IAAI,CAACJ,UAAU,CAAC;MAClC;IACJ,CAAC,EAAE,GAAG,CAAC;EACX;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEEK,oBAAoBA,CAAA,EAAG;IACrBD,aAAa,CAAC,IAAI,CAACJ,UAAU,CAAC;EAChC;EAMFM,MAAMA,CAAA,EAAG;IACL,oBACInB,OAAA;MAAKoB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC7B,CAAC,IAAI,CAACb,KAAK,CAACD,SAAS,gBAClBP,OAAA,CAAAE,SAAA;QAAAmB,QAAA,gBACJrB,OAAA;UAAKoB,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAC7B,IAAI,CAACb,KAAK,CAACC;QAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACNzB,OAAA;UAAKoB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAE7BrB,OAAA;YAAQ0B,EAAE,EAAC,UAAU;YAACC,KAAK,EAAC,OAAO;YAACC,OAAO,EAAE,IAAI,CAACvB,sBAAuB;YACzEwB,IAAI,EAAC,QAAQ;YAAAR,QAAA,EAAC;UAEd;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA,eACJ,CAAC,gBAECzB,OAAA,CAACF,OAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACb;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;IAEF;EACZ;AACJ;;AAEA;AACA,eAAetB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}